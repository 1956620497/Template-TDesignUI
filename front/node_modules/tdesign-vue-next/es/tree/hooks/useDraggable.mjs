/**
 * tdesign v1.10.3
 * (c) 2024 tdesign
 * @license MIT
 */

import { t as throttle_1 } from '../../_chunks/dep-79b34b15.mjs';
import '../adapt.mjs';
import { reactive } from 'vue';
import '../../_chunks/dep-5f2d2466.mjs';
import '../../_chunks/dep-da043898.mjs';
import '../../_chunks/dep-0abcde4b.mjs';
import '../../_chunks/dep-592c2263.mjs';
import '../../_chunks/dep-a280bc61.mjs';
import '../../_chunks/dep-2f22c468.mjs';
import '../../_chunks/dep-2887f3ff.mjs';
import '../../_chunks/dep-e2ec661e.mjs';
import '../../_chunks/dep-73403949.mjs';
import '../../utils/withInstall.mjs';
import '../../hooks/useVModel.mjs';
import '../../_chunks/dep-c2562942.mjs';
import '../../_chunks/dep-12c58bcd.mjs';
import '../../_chunks/dep-23d11751.mjs';
import '../../_chunks/dep-761412f3.mjs';
import '../../_chunks/dep-9b993b35.mjs';
import '../../hooks/useDefaultValue.mjs';
import 'tdesign-icons-vue-next';
import '../../checkbox/index.mjs';
import '../../checkbox/checkbox.mjs';
import '../../_chunks/dep-7375c644.mjs';
import '../../_chunks/dep-a3634d1b.mjs';
import '../../_chunks/dep-02896301.mjs';
import '../../checkbox/props.mjs';
import '../../hooks/useRipple.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../hooks/useConfig.mjs';
import '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-6b511771.mjs';
import '../../_chunks/dep-c293e0d0.mjs';
import '../../_chunks/dep-78e4b3aa.mjs';
import '../../_chunks/dep-405423c1.mjs';
import '../../_chunks/dep-1ab6c84c.mjs';
import '../../_chunks/dep-de2d042e.mjs';
import '../../_chunks/dep-cb0591ac.mjs';
import '../../_chunks/dep-5a153eb7.mjs';
import '../../_chunks/dep-00994527.mjs';
import '../../_chunks/dep-6f4d776e.mjs';
import '../../_chunks/dep-266dd187.mjs';
import '../../_chunks/dep-00d0d3ed.mjs';
import '../../_chunks/dep-5e6aeadf.mjs';
import '../../_chunks/dep-3971c9b5.mjs';
import '../../_chunks/dep-37e92f71.mjs';
import '../../_chunks/dep-7e3f8d40.mjs';
import '../../_chunks/dep-74caa1e8.mjs';
import '../../_chunks/dep-5acd8ca4.mjs';
import '../../_chunks/dep-37115006.mjs';
import '../../_chunks/dep-54c036a7.mjs';
import '../../_chunks/dep-92513c22.mjs';
import '../../_chunks/dep-cbaa41db.mjs';
import '../../_chunks/dep-d2fd4ca7.mjs';
import '../../_chunks/dep-46d1bd23.mjs';
import '../../_chunks/dep-61c13ae0.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../_chunks/dep-e16e8807.mjs';
import '../../_chunks/dep-05c168fe.mjs';
import '../../_chunks/dep-68770bb3.mjs';
import '../../config-provider/type.mjs';
import '../../utils/set-style.mjs';
import '../../hooks/tnode.mjs';
import '../../_chunks/dep-e5c1de4d.mjs';
import '../../_chunks/dep-57a63f1e.mjs';
import '../../_chunks/dep-fab7f1e1.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-843483c1.mjs';
import '../../checkbox/constants.mjs';
import '../../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../../_common/js/utils/observe.mjs';
import '../../checkbox/hooks/useKeyboardEvent.mjs';
import '../../_common/js/common.mjs';
import '../../hooks/useDisabled.mjs';
import '../../_chunks/dep-1835421d.mjs';
import '../../hooks/useReadonly.mjs';
import '../../checkbox/group.mjs';
import '../../_chunks/dep-381a5382.mjs';
import '../../_chunks/dep-cafe7b87.mjs';
import '../../_chunks/dep-ec2520f0.mjs';
import '../../_chunks/dep-8a844ee9.mjs';
import '../../_chunks/dep-b0e5736a.mjs';
import '../../checkbox/checkbox-group-props.mjs';
import '../../hooks/slot.mjs';
import './style/css.mjs';
import '../../checkbox/type.mjs';
import '../../loading/index.mjs';
import '../../_chunks/dep-90b5fb51.mjs';
import '../../_chunks/dep-34938062.mjs';
import '../../_chunks/dep-ac6eb839.mjs';
import '../../_chunks/dep-e4224b2d.mjs';
import '../../_chunks/dep-e0886886.mjs';
import '../../_chunks/dep-e43c7871.mjs';
import '../../_chunks/dep-2172afee.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_common/js/loading/circle-adapter.mjs';
import '../../_common/js/utils/set-style.mjs';
import '../../_common/js/utils/helper.mjs';
import '../../_chunks/dep-f7618968.mjs';
import '../../_chunks/dep-1a0843d4.mjs';
import '../../_chunks/dep-ac5b7a3e.mjs';
import '../../utils/dom.mjs';
import '../../utils/easing.mjs';
import '../../loading/props.mjs';
import '../../hooks/useTeleport.mjs';
import '../../loading/type.mjs';
import '../../hooks/useGlobalIcon.mjs';
import '../../hooks/useLazyLoad.mjs';
import '../../hooks/useVirtualScrollNew.mjs';
import '../../hooks/useResizeObserver.mjs';
import '../../_common/js/tree/tree-node.mjs';
import '../../_chunks/dep-0d02d2e1.mjs';
import '../../_chunks/dep-b1fd567e.mjs';
import '../../_chunks/dep-359f7486.mjs';
import '../../_chunks/dep-df061359.mjs';
import '../../_common/js/tree/tree-node-model.mjs';
import '../../_chunks/dep-8a199736.mjs';
import '../../_chunks/dep-859fbf5f.mjs';
import '../../_chunks/dep-95cb7fa9.mjs';
import '../../_common/js/log/log.mjs';
import '../../_common/js/log/index.mjs';

var DragPosition = /* @__PURE__ */function (DragPosition2) {
  DragPosition2[DragPosition2["Before"] = -1] = "Before";
  DragPosition2[DragPosition2["Inside"] = 0] = "Inside";
  DragPosition2[DragPosition2["After"] = 1] = "After";
  return DragPosition2;
}(DragPosition || {});
function useDraggable(state) {
  var treeItemRef = state.treeItemRef;
  var dragStates = reactive({
    isDragOver: false,
    isDragging: false,
    dropPosition: 0 /* Inside */
  });
  var updateDropPosition = function updateDropPosition(dragEvent) {
    var _rootNode$getBounding;
    var rootNode = treeItemRef.value;
    if (!rootNode) return;
    var rect = rootNode === null || rootNode === void 0 || (_rootNode$getBounding = rootNode.getBoundingClientRect) === null || _rootNode$getBounding === void 0 ? void 0 : _rootNode$getBounding.call(rootNode);
    var offsetY = window.scrollY + rect.top;
    var pageY = dragEvent.pageY;
    var gapHeight = rect.height / 4;
    var diff = pageY - offsetY;
    if (diff < gapHeight) {
      dragStates.dropPosition = -1 /* Before */;
    } else if (diff < rect.height - gapHeight) {
      dragStates.dropPosition = 0 /* Inside */;
    } else {
      dragStates.dropPosition = 1 /* After */;
    }
  };
  var setDragStatus = function setDragStatus(status, dragEvent) {
    var _drag$handleDragStart, _drag$handleDragEnd, _drag$handleDragOver, _drag$handleDragLeave, _drag$handleDrop;
    var node = state.node,
      treeScope = state.treeScope;
    var drag = treeScope.drag;
    if (!drag) return;
    switch (status) {
      case "dragStart":
        dragStates.isDragging = true;
        dragStates.dropPosition = 0 /* Inside */;
        (_drag$handleDragStart = drag.handleDragStart) === null || _drag$handleDragStart === void 0 || _drag$handleDragStart.call(drag, {
          node: node,
          dragEvent: dragEvent
        });
        break;
      case "dragEnd":
        dragStates.isDragging = false;
        dragStates.isDragOver = false;
        dragStates.dropPosition = 0 /* Inside */;
        throttleUpdateDropPosition.cancel();
        (_drag$handleDragEnd = drag.handleDragEnd) === null || _drag$handleDragEnd === void 0 || _drag$handleDragEnd.call(drag, {
          node: node,
          dragEvent: dragEvent
        });
        break;
      case "dragOver":
        dragStates.isDragOver = true;
        throttleUpdateDropPosition(dragEvent);
        (_drag$handleDragOver = drag.handleDragOver) === null || _drag$handleDragOver === void 0 || _drag$handleDragOver.call(drag, {
          node: node,
          dragEvent: dragEvent
        });
        break;
      case "dragLeave":
        dragStates.isDragOver = false;
        dragStates.dropPosition = 0 /* Inside */;
        throttleUpdateDropPosition.cancel();
        (_drag$handleDragLeave = drag.handleDragLeave) === null || _drag$handleDragLeave === void 0 || _drag$handleDragLeave.call(drag, {
          node: node,
          dragEvent: dragEvent
        });
        break;
      case "drop":
        (_drag$handleDrop = drag.handleDrop) === null || _drag$handleDrop === void 0 || _drag$handleDrop.call(drag, {
          node: node,
          dropPosition: dragStates.dropPosition,
          dragEvent: dragEvent
        });
        dragStates.isDragOver = false;
        throttleUpdateDropPosition.cancel();
        break;
      default:
        break;
    }
  };
  var handleDragStart = function handleDragStart(evt) {
    var node = state.node;
    if (!node.isDraggable()) return;
    evt.stopPropagation();
    setDragStatus("dragStart", evt);
    try {
      var _evt$dataTransfer;
      (_evt$dataTransfer = evt.dataTransfer) === null || _evt$dataTransfer === void 0 || _evt$dataTransfer.setData("text/plain", "");
    } catch (e) {}
  };
  var handleDragEnd = function handleDragEnd(evt) {
    var node = state.node;
    if (!node.isDraggable()) return;
    evt.stopPropagation();
    setDragStatus("dragEnd", evt);
  };
  var handleDragOver = function handleDragOver(evt) {
    var node = state.node;
    if (!node.isDraggable()) return;
    evt.stopPropagation();
    evt.preventDefault();
    setDragStatus("dragOver", evt);
  };
  var handleDragLeave = function handleDragLeave(evt) {
    var node = state.node;
    if (!node.isDraggable()) return;
    evt.stopPropagation();
    setDragStatus("dragLeave", evt);
  };
  var handleDrop = function handleDrop(evt) {
    var node = state.node;
    if (!node.isDraggable()) return;
    evt.stopPropagation();
    evt.preventDefault();
    setDragStatus("drop", evt);
  };
  var throttleUpdateDropPosition = throttle_1(function (dragEvent) {
    updateDropPosition(dragEvent);
  });
  return {
    dragStates: dragStates,
    handleDragStart: handleDragStart,
    handleDragEnd: handleDragEnd,
    handleDragOver: handleDragOver,
    handleDragLeave: handleDragLeave,
    handleDrop: handleDrop
  };
}

export { DragPosition, useDraggable as default };
//# sourceMappingURL=useDraggable.mjs.map
